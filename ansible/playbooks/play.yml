---
- hosts: all
  vars:
    - user: remote_user
    - home: /home/remote_user   
  tasks:
    - name: utente e home corrente
      debug:
        msg: "Username: {{ user }}, Home dir: {{ home }}"
    
    # - name: Check if file already exists
    #   command: ls /home/{{ user }}/myfile
    #   register: file_exists
    #   ignore_errors: yes

    # - name: create file for user
    #   copy:
    #     dest: "/home/{{ user }}/myfile"
    #     content: |
    #       line 01
    #       line 02
    #   when: file_exists is failed

    # - name: show message if file exists
    #   debug:
    #     msg: The user file already exists.
    #   when: file_exists is succeeded

    # - name: Create a bz2 archive of a globbed path, while excluding specific dirnames
    #   community.general.archive:
    #     path:
    #     - /app*
    #     dest:  /home/{{ user }}/app.tar.bz2
    #     exclude_path:
    #     - /app/.DS_Store
    #     - /app/.laminas-ci
    #     format: bz2
    
    # - name: Check if zip already exists
    #   command: ls /home/{{ user }}/app.tar.bz2
    #   register: file_tar_exists
    #   ignore_errors: yes

    - name: Check if zip already exists
      command: ls /tmp/app.zip 
      register: file_exists
      ignore_errors: yes

    - name: Copy build on remote server
      ansible.builtin.file:
        path: /tmp/app.zip
        state: absent
      when: file_exists is succeeded

    - name: Copy build on remote server
      ansible.builtin.copy:
        src: app.zip
        dest: /tmp/app.zip 
      when: file_exists is failed
    
    - name: Extract app.zip into /app
      ansible.builtin.unarchive:
        src : /tmp/app.zip 
        dest: /app_1
        remote_src: yes
      when: file_tar_exists is succeeded
        

